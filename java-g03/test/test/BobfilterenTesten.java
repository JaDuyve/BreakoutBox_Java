package test;

import domein.*;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.mockito.Mock;
import org.mockito.Mockito;
import persistentie.GenericDao;
import persistentie.GenericDaoJpa;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

@RunWith(value = Parameterized.class)
public class BobfilterenTesten {
    private BobBeheerder bobBeheerder;
    private GenericDao<Bob> bobRepo;
    private List<Bob> bobs;
    private int result;
    private String filterValue;

    @Parameterized.Parameters
    public static Collection<Object[]> getTestParameters() {
        return Arrays.asList(new Object[][]{
                {new ArrayList<>(Arrays.asList(new Bob("bob1", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()), new Bob("bob2", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()), new Bob("bob3", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()))), "3",1},
                {new ArrayList<>(Arrays.asList(new Bob("bob1", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()), new Bob("bob2", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()), new Bob("bob3", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()))), "blub",0},
                {new ArrayList<>(Arrays.asList(new Bob("bob1", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()), new Bob("bob2", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()), new Bob("bob3", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()))), null,3},
                {new ArrayList<>(Arrays.asList(new Bob("bob1", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()), new Bob("bob2", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()), new Bob("bob3", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()))), "",3},
                {new ArrayList<>(Arrays.asList(new Bob("bob1", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()), new Bob("bob2", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()), new Bob("bob3", new ArrayList<>(Arrays.asList(new Oefening("oefening3", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening2", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")), new Oefening("oefening1", "opgavePath", "antwoord", "feedbackPath", new ArrayList<Groepsbewerking>(Arrays.asList(new Groepsbewerking("groepsbewerking1", "test", "2", Bewerking.AFTREKKING),new Groepsbewerking("groepsbewerking2", "test", "2", Bewerking.AFTREKKING))), new Vak("wiskunde", "red")))), new ArrayList<Actie>(Arrays.asList(new Actie("potje", "Zoek blauw potje"), new Actie("blad", "zoek het gele blad"), new Actie("doos", "zoek de rode doos"))), new ArrayList<Toegangscode>()))), "bob2",1}


        });
    }

    public BobfilterenTesten(List<Bob> bobs, String filterValue, int result) {
        this.bobs = bobs;
        this.result = result;
        this.filterValue = filterValue;
    }

    @Before
    public void Before() {
        bobRepo = Mockito.mock(GenericDaoJpa.class);
        Mockito.when(bobRepo.findAll()).thenReturn(bobs);

        bobBeheerder = new BobBeheerder(bobRepo);

    }

    @Test
    public void bobFilteren() {


        bobBeheerder.changeFilter(filterValue);

        Assert.assertEquals(result, bobBeheerder.geefBobs().size());
    }

}
